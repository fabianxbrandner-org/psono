version: "2"
services:
  proxy:
    container_name: psono-quickstart-psono-proxy
    restart: always
    image: nginx:alpine
    ports:
      - "${PSONO_EXTERNAL_PORT}:80"
      - "${PSONO_EXTERNAL_PORT_SECURE}:443"
    depends_on:
      - psono-server
      - psono-fileserver
      - psono-client
    links:
      - psono-server:psono-quickstart-psono-server
      - psono-fileserver:psono-quickstart-psono-fileserver
      - psono-client:psono-quickstart-psono-server
    volumes:
      - ~/psono/html:/var/www/html
      - ~/psono/certificates/dhparam.pem:/etc/ssl/dhparam.pem
      - ~/psono/certificates/private.key:/etc/ssl/private.key
      - ~/psono/certificates/public.crt:/etc/ssl/public.crt
      - ~/psono/psono_nginx.conf:/etc/nginx/nginx.conf

  postgres:
    container_name: psono-quickstart-psono-postgres
    restart: always
    image: psono/psono-postgres:latest
    environment:
      POSTGRES_USER: "${PSONO_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${PSONO_POSTGRES_PASSWORD}"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - ~/psono/data/postgresql:/var/lib/postgresql/data

  psono-server:
    container_name: psono-quickstart-psono-server
    restart: always
    image: psono/psono-server:latest
    depends_on:
      - postgres
    links:
      - postgres:psono-quickstart-psono-postgres
    command: sh -c "sleep 10 && python3 psono/manage.py migrate && python3 psono/manage.py createuser admin@${PSONO_USERDOMAIN} admin admin@example.com && python3 psono/manage.py promoteuser admin@${PSONO_USERDOMAIN} superuser && python3 psono/manage.py createuser demo1@${PSONO_USERDOMAIN} demo1 demo1@example.com && python3 psono/manage.py createuser demo2@${PSONO_USERDOMAIN} demo2 demo2@example.com && /bin/sh /root/configs/docker/cmd.sh"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - ~/psono/config/settings.yaml:/root/.psono_server/settings.yaml
    extra_hosts:
      - "host.docker.internal:host-gateway"
  psono-fileserver:
    container_name: psono-quickstart-psono-fileserver
    restart: always
    image: psono/psono-fileserver:latest
    depends_on:
      - psono-server
    links:
      - psono-server:psono-quickstart-psono-server
    command: sh -c "sleep 10 && /bin/sh /root/configs/docker/cmd.sh"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - ~/psono/data/shard:/opt/psono-shard
      - ~/psono/config/settings-fileserver.yaml:/root/.psono_fileserver/settings.yaml

  psono-client:
    container_name: psono-quickstart-psono-client
    restart: always
    image: psono/psono-client:latest
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - ~/psono/config/config.json:/usr/share/nginx/html/config.json

  psono-admin-client:
    container_name: psono-quickstart-psono-admin-client
    restart: always
    image: psono/psono-admin-client:latest
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - ~/psono/config/config.json:/usr/share/nginx/html/portal/config.json

  psono-watchtower:
    container_name: psono-quickstart-psono-watchtower
    restart: always
    image: containrrr/watchtower
    command: --label-enable --cleanup --interval 3600
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
